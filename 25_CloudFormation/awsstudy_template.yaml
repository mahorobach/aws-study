AWSTemplateFormatVersion: '2010-09-09'
Description: 'aws-study-template'

Parameters:
  VpcName:
    Description: '2番目の練習'
    Type: String
    Default: Aws-study
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

  VPCCIDR:
    Type: String
    Default: '10.0.0.0/16'

  PublicSubnetACIDR:
    Type: String
    Default: '10.0.1.0/24'

  PublicSubnetCCIDR:
    Type: String
    Default: '10.0.2.0/24'

  PrivateSubnetACIDR:
    Type: String
    Default: '10.0.3.0/24'

  PrivateSubnetCCIDR:
    Type: String
    Default: '10.0.4.0/24'

Resources:
  AWSVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Ref VpcName
  #IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-IGW'
  #IGW Attach
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref AWSVPC
      InternetGatewayId: !Ref InternetGateway

  #Subnet
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSVPC
      CidrBlock: !Ref PublicSubnetACIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PublicSubnetA'

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSVPC
      CidrBlock: !Ref PublicSubnetCCIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PublicSubnetC'
  #プライベートサブネット
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSVPC
      CidrBlock: !Ref PrivateSubnetACIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PrivateSubnetA'

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSVPC
      CidrBlock: !Ref PrivateSubnetCCIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PrivateSubnetC'

  # ルートテーブル
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AWSVPC
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PublicRouteTable'

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AWSVPC
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PrivateRouteTableA'

  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AWSVPC
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-PrivateRouteTableC'

  #Routing
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # RouteTable Associate
  PublicSubnetRouteTableAAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableCAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA

  PrivateSubnetRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC

  #VPC Endpoint for S3
  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref AWSVPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref PrivateRouteTableA
        - !Ref PrivateRouteTableC
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: '*'
            Resource:
              - '*'
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-vpce-s3'

  #セキュリティーグループ（EC2）
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instances
      VpcId: !Ref AWSVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: SSH access
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-EC2-SecurityGroup'

  #EC2インスタンス
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: akaokey

      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      Monitoring: true
      SubnetId: !Ref PublicSubnetA
      SecurityGroupIds:
        - !Ref EC2SecurityGroup

      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-EC2-Instance'

#OUTPUT
Outputs:
  VPC:
    Value: !Ref AWSVPC
    Export:
      Name: !Sub '${VpcName}-vpc'
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub '${VpcName}-public-subnet-a'

  PublicSubnetC:
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub '${VpcName}-public-subnet-c'

  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub '${VpcName}-private-subnet-a'

  PrivateSubnetC:
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub '${VpcName}-private-subnet-c'

  PublicRouteTable:
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub '${VpcName}-public-route-table'

  PrivateRouteTableA:
    Value: !Ref PrivateRouteTableA
    Export:
      Name: !Sub '${VpcName}-private-route-table-a'

  PrivateRouteTableC:
    Value: !Ref PrivateRouteTableC
    Export:
      Name: !Sub '${VpcName}-private-route-table-c'

  S3VPCEndpoint:
    Value: !Ref S3VPCEndpoint
    Export:
      Name: !Sub '${VpcName}-vpce-s3'
    Description: VPC Endpoint for S3
